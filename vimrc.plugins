" Note: Skip initialization for vim-tiny or vim-small.
 if !1 | finish | endif

" install vim-plug for vim if not present
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

" install vim-plug for neovim if not present
if empty(glob('~/.nvim/autoload/plug.vim'))
  silent !curl -fLo ~/.nvim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif

" Start vim-plug
call plug#begin()

" My Plugins here (use single quotes)
Plug 'airblade/vim-gitgutter'
Plug 'bling/vim-airline'
Plug 'bling/vim-bufferline'
Plug 'edkolev/tmuxline.vim'
Plug 'jtratner/vim-flavored-markdown'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/gv.vim'
Plug 'junegunn/limelight.vim'
Plug 'kien/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'rking/ag.vim'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-fugitive'


" Add plugins to &runtimepath
call plug#end()

" load additional local config
if filereadable(expand("~/.vimrc.plugins.local"))
  source ~/.vimrc.plugins.local
endif

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Limelight config
" color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'grey'
let g:limelight_conceal_ctermfg = 240
" color name (:help gui-colors) or RGB color
let g:limelight_conceal_guifg = 'DarkGrey'
let g:limelight_conceal_guifg = '#777777'
" Default 0.5
let g:limelight_default_coefficient = 0.7
" Numer of preceding/following paragraphs to include (default: 0)
let g:limelight_paragraph_span = 1
" Beginning/end of paragraph
"  When there is no empty line between the paragraphs
"  and each paragraph starts with indentation
let g:limelight_bop = '^\s'
let g:limelight_eop = '\ze\n^\s'
" Highlighting priority (default: 10)
"   Set it to -1 not to overrule hlsearch
let g:limelight_priority = -1
" Autoload Limelight when goyo mode is called
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!
