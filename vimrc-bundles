" Check nocompatible
if &compatible
  set nocompatible
end

" Filetyle must be off before vundle install
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Bundle 'airblade/vim-gitgutter'
Bundle 'bling/vim-airline'
Bundle 'bling/vim-bufferline'
Bundle 'godlygeek/tabular'
Bundle 'jtratner/vim-flavored-markdown'
Bundle 'junegunn/goyo.vim'
Bundle 'junegunn/seoul256.vim'
Bundle 'junegunn/vim-easy-align'
Bundle 'kien/ctrlp.vim'
Bundle 'mileszs/ack.vim'
Bundle 'nathanaelkane/vim-indent-guides'
Bundle 'reedes/vim-pencil'
Bundle 'reedes/vim-colors-pencil'
Bundle 'reedes/vim-thematic'
Bundle 'rking/ag.vim'
Bundle 'rodjek/vim-puppet'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
" Bundle 'scrooloose/syntastic'
Bundle 'sjl/gundo.vim'
Bundle 'tpope/vim-markdown'
Bundle 'tpope/vim-fugitive'
" Bundle 'tpope/vim-rails'

" load additional local config
if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"
" Configure vundle bundles
"

" nerdTree - show hidden files in nerdTree
let NERDTreeShowHidden=1

" nerdTree - enable closing vim if nerdTree is the only open window
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" get powerline patched fonts in airline
let g:airline_powerline_fonts = 1

" configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif
